@startuml

hide circle
skinparam classAttributeIconSize 0
skinparam monochrome true

class Juego {
    ...
    + Juego(jugadores: List<Jugador>, archivo: Reader, limitePreguntas: int, limitePuntos: int)
    + Juego(jugadores: List<Jugador>, preguntas: List<Pregunta>, limitePreguntas: int, limitePuntos: int)
    {method}...
}

abstract Pregunta {
    ...
# Pregunta(enunciado: String, opciones: List<Opcion>, cantidadOpcionesMin: int, \n cantidadOpcionesMax: int, opcionesCorrectas: List<Opcion>, \n evaluador: EvaluadorDePuntajes, categoria: String, descripcionRespuesta: String, \n modificadoresCompatibles: List<Modificador>)
    {method} ...
}

class JuegoParser {
    + parsear(archivo: Reader, formato: String): List<Pregunta>
}

class JSONReader {
    + validarJSON(jsonElement: JsonElement): JsonArray
    {method} ...
}

exception CantidadJugadoresInvalida
exception CantidadOpcionesInvalida
exception CantidadPreguntasInvalida
exception Exception

Juego o-down- "1..*" Pregunta
Juego .up.> CantidadJugadoresInvalida : "instanciate"
Juego ..up.> CantidadPreguntasInvalida : "instanciate"
Juego .up.> JugadorNoEncontrado : "instanciate"
Juego ..up.> JuegoFinalizado : "instanciate"
Juego .up.> MultiplicadorNoEncontrado : "instanciate"
Pregunta .up.> CantidadOpcionesInvalida : "instanciate"
Juego ..up..> JuegoParser : "use"
JuegoParser .up.> JSONReader : "use"
JSONReader .right.> JSONInvalido : "instanciate"

CantidadJugadoresInvalida -up-|> Exception
CantidadOpcionesInvalida -up-|> Exception
CantidadPreguntasInvalida -up-|> Exception
Exception <|--- JugadorNoEncontrado
Exception <|-- JuegoFinalizado
Exception <|--- MultiplicadorNoEncontrado
JSONInvalido -down-|> Exception


@enduml
